openapi: 3.0.3
paths:
  /users:
    get:
      tags:
        - users
      summary: Return all users 
      description: Get all users into a table
      operationId: getAllUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
        '404':
          description: Users not found
        '500':
          description: Internal Server Error
  /userform:
    get:
      tags:
        - userform
      summary: Return a form
      description: Return a form to complete the data of an user
      responses:
        '200':
          description: Successful operation
          # content:
          #   application/html:
        '500':
          description: Internal Server Error
  /user:
    post:
      tags:
        - user
      summary: Add a new user
      description: Add a new user to the database
      operationId: addPet
      responses:
        '201':
          description: The request succeeded, and a new resource was created as a result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '400':
          description: Invalid input
        '500':
          description: Internal Server Error
  /user/{userId}:
    get:
      tags:
        - user
      summary: Find user by ID
      description: Returns a single user
      operationId: getUserById
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '500':
          description: Internal Server Error
    put:
      tags:
        - user
      summary: Update an existing user
      description: Update an existing user by Id
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Update an existent user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '201':
          description: The request succeeded, and a new resource was created as a result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '500':
          description: Internal Server Error
    delete:
      tags:
        - user
      summary: Delete an user
      description: delete an user
      operationId: deletePet
      parameters:
        - name: api_key
          in: header
          description: ''
          required: false
          schema:
            type: string
        - name: userId
          in: path
          description: User id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '500':
          description: Internal Server Error
  /template/{templateId}/{userId}:
    get:
      tags:
        - template
      summary: Get a template
      description: Returns a templateCV prepolute with user data
      operationId: getTemplateByUserId
      parameters:
        - name: templateId
          in: path
          description: ID of template to return
          required: true
          schema:
            type: integer
            format: int64
        - name: userId
          in: path
          description: ID of user to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
        '400':
          description: Invalid ID supplied
        '404':
          description: User not found
        '500':
          description: Internal Server Error
  # /donetemplate: path to download pdf
components:
  schemas:
    User:
      type: object
      properties: 
        id:
          type: integer
          format: int64
          example: 10
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        adress: 
          type: string
          example: 12 Backer Street London (England)
        phone:
          type: string
          example: '+44 20 7123 4567'
        email:
          type: string
          example: john@email.com
        dateofbirth:
          type: string
          example: 30/5/1998
        gender: 
          type: string
          example: male
        photoUrls:
          type: array
          items:
            type: string
      xml:
        name: user
    Users:
      type: object
      properties: 
        id:
          type: integer
          format: int64
          example: 10
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        adress: 
          type: string
          example: 12 Backer Street London (England)
        phone:
          type: string
          example: '+44 20 7123 4567'
        email:
          type: string
          example: john@email.com
        dateofbirth:
          type: string
          example: 30/5/1998
        gender: 
          type: string
          example: male
        photoUrls:
          type: array
          items:
            type: string
