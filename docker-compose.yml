# ./docker-compose.yml
services:
  cv_db-service:
    # env_file:
    #   - ./.secrets
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_CONTAINER: ${MYSQL_CONTAINER}
    image: mysql:9.0
    container_name: ${MYSQL_CONTAINER}
    networks:
      - cv-network
    ports:
      - 3307:3306
    volumes:
      - ./sql/schemadump.sql:/docker-entrypoint-initdb.d/dump.sql
      # - mysql-data:/var/lib/mysql
    healthcheck:
      test: [CMD, mysqladmin, ping, -h, localhost]
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 10s
    restart: always
    command: mysqld

  cv_api-service:
    # env_file:
    #   - ./.secrets
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      API_IMG: ${API_IMG}
      API_TAG: ${API_TAG}
      API_CONTAINER: ${API_CONTAINER}
      MYSQL_HOST: ${MYSQL_HOST}
    build:
      context: .
      dockerfile: Dockerfile.api
    image: ${API_IMG}:${API_TAG}
    container_name: ${API_CONTAINER}
    ports:
      - 8080:8080
    depends_on:
      cv_db-service:
        condition: service_healthy
    networks:
      - cv-network
    restart: always

  cv_bff-service:
    # env_file:
    #   - ./.secrets
    environment:
      BFF_IMG: ${BFF_IMG}
      BFF_TAG: ${BFF_TAG}
      BFF_CONTAINER: ${BFF_CONTAINER}
      API_IP: ${API_IP}
      API_PORT: ${API_PORT}
    build:
      context: .
      dockerfile: Dockerfile.bff
    image: ${BFF_IMG}:${BFF_TAG}
    container_name: ${BFF_CONTAINER}
    ports:
      - "5000:5000"
    networks:
      - cv-network
    restart: always
    depends_on:
      cv_db-service:
        condition: service_healthy

  cv_venom-service:
    container_name: cv_venom-container
    image: alpine:3.12    #curl -s https://registry.hub.docker.com/v2/repositories/ovhcom/venom/tags | jq -r '.results[] | .name + " - " + (.last_updated | split("T")[0])' | sort -t '-' -k 2 -r
    profiles: [ "test" ]
    # env_file:
    #   - ./.secrets
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_HOST: ${MYSQL_HOST}
      # api
      API_CONTAINER: ${API_CONTAINER}
      API_IP: ${API_IP}
      API_PORT: ${API_PORT}
      # bff
      BFF_IMG: ${BFF_IMG}
      BFF_TAG: ${BFF_TAG}
      BFF_CONTAINER: ${BFF_CONTAINER}
    depends_on:
      cv_db-service:
        condition: service_healthy
    entrypoint: [ "sh", "-c", "wget https://github.com/ovh/venom/releases/download/v1.1.0/venom.linux-amd64 -O /usr/local/bin/venom && chmod +x /usr/local/bin/venom && venom run e2etests.yml" ]
    volumes:
      - ./api/tests:/app
    working_dir: /app
    networks:
      - cv-network



networks:
  cv-network:
    name: cv-network
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.18.0.0/16
    #       gateway: 172.18.0.1
# volumes:
#   mysql-data:
#     name: cv_db-volume

