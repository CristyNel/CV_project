# ./docker-compose.yml
services:
  cv_db-service:
    image: mysql:${MYSQL_TAG:-8.0.39}
    container_name: ${MYSQL_CONTAINER}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - ${CV_NETWORK}
    ports:
      - ${DB_PORT:-3306}:3306
    volumes:
      - ./sql/schemadump.sql:/docker-entrypoint-initdb.d/dump.sql
      # - mysql-data:/var/lib/mysql
    healthcheck:
      test: [CMD, mysqladmin, ping, -h, localhost]
      interval: 12s
      timeout: 8s
      retries: 5
      start_period: 15s
    restart: always
    command: >
      mysqld; sh -c "
      echo 'Europe/London' > /etc/timezone && \
      cp /usr/share/zoneinfo/Europe/London /etc/localtime"

  cv_api-service:
    build:
      context: .
      dockerfile: Dockerfile.api
    image: ${API_IMG}:${API_TAG}
    container_name: ${API_CONTAINER}
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - ${API_PORT:-8080}:8080
    depends_on:
      cv_db-service:
        condition: service_healthy
    networks:
      - ${CV_NETWORK}
    restart: always

  cv_bff-service:
    build:
      context: .
      dockerfile: Dockerfile.bff
    image: ${BFF_IMG}:${BFF_TAG}
    container_name: ${BFF_CONTAINER}
    environment:
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
    ports:
      - ${BFF_PORT:-5000}:5000
    networks:
      - ${CV_NETWORK}
    restart: always
    depends_on:
      cv_db-service:
        condition: service_healthy

networks:
  cv-network:
    name: ${CV_NETWORK}
    driver: bridge
    # ipam:
    #   config:
    #     - subnet: 172.18.0.0/16
    #       gateway: 172.18.0.1
# volumes:
