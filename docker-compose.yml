services:
  cv_db-container:
    build:
      context: ./sql
    image: cv_db-image:8.0
    container_name: cv_db-container
    networks:
      - my-network
    ports:
      - "3307:3306" # 
    env_file:
      - .env
    volumes:
      - ./sql/schemadump.sql:/docker-entrypoint-initdb.d/dump.sql
      #- db-data:/var/lib/mysql
      - ./sql/db.cnf:/etc/mysql/my.cnf
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always


  cv_api-container:
    build:
      context: ./api
    image: cv_api-image
    container_name: cv_api-container
    depends_on:
      cv_db-container:
        condition: service_healthy
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - my-network
    command: ["dockerize", "-wait", "tcp://cv_db-container:3306", "-timeout", "60s", "./main"]


  cv_bff-container:
    build:
      context: ./bff
    image: cv_bff-image
    container_name: cv_bff-container
    depends_on:
      cv_db-container:
        condition: service_healthy
    restart: always
    ports:
      - "5000:5000"
    env_file:
      - .env
    networks:
      - my-network
    command: ["dockerize", "-wait", "tcp://cv_api-container:8080", "-timeout", "60s", "python3", "app.py", "-i", "cv_api-container", "-p", "8080"]


networks:
  my-network:
    driver: bridge


volumes:
  db-data:
