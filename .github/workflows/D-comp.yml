# * .github/docker-compose.yml
---
name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      cv_db-service:
        image: mysql:9.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_CONTAINER: ${{ secrets.MYSQL_CONTAINER }}
        ports:
          - 3307:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost"
          --health-interval=12s
          --health-timeout=8s
          --health-retries=5
          --health-start-period=5s
        volumes:
          - ./sql/schemadump.sql:/docker-entrypoint-initdb.d/dump.sql

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push API service
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.api
          push: false
          tags: ${{ secrets.API_IMG }}:${{ secrets.API_TAG }}

      - name: Build and push BFF service
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.bff
          push: false
          tags: ${{ secrets.BFF_IMG }}:${{ secrets.BFF_TAG }}

      - name: Run Docker Compose
        run: docker-compose up --build -d
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_CONTAINER: ${{ secrets.MYSQL_CONTAINER }}
          API_IMG: ${{ secrets.API_IMG }}
          API_TAG: ${{ secrets.API_TAG }}
          API_CONTAINER: ${{ secrets.API_CONTAINER }}
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          BFF_IMG: ${{ secrets.BFF_IMG }}
          BFF_TAG: ${{ secrets.BFF_TAG }}
          BFF_CONTAINER: ${{ secrets.BFF_CONTAINER }}
          API_IP: ${{ secrets.API_IP }}
          API_PORT: ${{ secrets.API_PORT }}
